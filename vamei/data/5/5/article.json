{"content":"<p><span style=\"font-family: courier new,courier;\">&#x4F5C;&#x8005;&#xFF1A;Vamei &#x51FA;&#x5904;&#xFF1A;http://www.cnblogs.com/vamei &#x6B22;&#x8FCE;&#x8F6C;&#x8F7D;&#xFF0C;&#x4E5F;&#x8BF7;&#x4FDD;&#x7559;&#x8FD9;&#x6BB5;&#x58F0;&#x660E;&#x3002;&#x8C22;&#x8C22;&#xFF01;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<h3><span style=\"font-family: courier new,courier;\">&#x6811;&#x7684;&#x7279;&#x5F81;&#x548C;&#x5B9A;&#x4E49;</span></h3>\r\n<p><span style=\"font-family: courier new,courier;\"><span style=\"color: #ff0000;\">&#x6811;(Tree)</span>&#x662F;&#x5143;&#x7D20;&#x7684;&#x96C6;&#x5408;&#x3002;&#x6211;&#x4EEC;&#x5148;&#x4EE5;&#x6BD4;&#x8F83;&#x76F4;&#x89C2;&#x7684;&#x65B9;&#x5F0F;&#x4ECB;&#x7ECD;&#x6811;&#x3002;&#x4E0B;&#x9762;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F;&#x4E00;&#x4E2A;&#x6811;&#xFF1A;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://images.cnitblog.com/blog/413416/201303/16224218-92e0f06926b443a9845653b27b2187d8.png\" alt=\"\"></span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x6811;&#x6709;&#x591A;&#x4E2A;<span style=\"color: #ff0000;\">&#x8282;&#x70B9;(node)</span>&#xFF0C;&#x7528;&#x4EE5;&#x50A8;&#x5B58;&#x5143;&#x7D20;&#x3002;&#x67D0;&#x4E9B;&#x8282;&#x70B9;&#x4E4B;&#x95F4;&#x5B58;&#x5728;&#x4E00;&#x5B9A;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x7528;&#x8FDE;&#x7EBF;&#x8868;&#x793A;&#xFF0C;&#x8FDE;&#x7EBF;&#x79F0;&#x4E3A;&#x8FB9;(edge)&#x3002;&#x8FB9;&#x7684;&#x4E0A;&#x7AEF;&#x8282;&#x70B9;&#x79F0;&#x4E3A;&#x7236;&#x8282;&#x70B9;&#xFF0C;&#x4E0B;&#x7AEF;&#x79F0;&#x4E3A;&#x5B50;&#x8282;&#x70B9;&#x3002;&#x6811;&#x50CF;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x65AD;&#x5206;&#x53C9;&#x7684;&#x6811;&#x6839;&#x3002;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x4E2A;<span style=\"color: #ff0000;\">&#x5B50;&#x8282;&#x70B9;(children)</span>&#xFF0C;&#x800C;&#x8BE5;&#x8282;&#x70B9;&#x662F;&#x76F8;&#x5E94;&#x5B50;&#x8282;&#x70B9;&#x7684;<span style=\"color: #ff0000;\">&#x7236;&#x8282;&#x70B9;(parent)</span>&#x3002;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;3,5&#x662F;6&#x7684;&#x5B50;&#x8282;&#x70B9;&#xFF0C;6&#x662F;3,5&#x7684;&#x7236;&#x8282;&#x70B9;&#xFF1B;1,8,7&#x662F;3&#x7684;&#x5B50;&#x8282;&#x70B9;, 3&#x662F;1,8,7&#x7684;&#x7236;&#x8282;&#x70B9;&#x3002;&#x6811;&#x6709;&#x4E00;&#x4E2A;&#x6CA1;&#x6709;&#x7236;&#x8282;&#x70B9;&#x7684;&#x8282;&#x70B9;&#xFF0C;&#x79F0;&#x4E3A;<span style=\"color: #ff0000;\">&#x6839;&#x8282;&#x70B9;(root)</span>&#xFF0C;&#x5982;&#x56FE;&#x4E2D;&#x7684;6&#x3002;&#x6CA1;&#x6709;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x8282;&#x70B9;&#x79F0;&#x4E3A;<span style=\"color: #ff0000;\">&#x53F6;&#x8282;&#x70B9;(leaf)</span>&#xFF0C;&#x6BD4;&#x5982;&#x56FE;&#x4E2D;&#x7684;1,8,9,5&#x8282;&#x70B9;&#x3002;&#x4ECE;&#x56FE;&#x4E2D;&#x8FD8;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x6811;&#x603B;&#x5171;&#x6709;4&#x4E2A;&#x5C42;&#x6B21;&#xFF0C;6&#x4F4D;&#x4E8E;&#x7B2C;&#x4E00;&#x5C42;&#xFF0C;9&#x4F4D;&#x4E8E;&#x7B2C;&#x56DB;&#x5C42;&#x3002;&#x6811;&#x4E2D;&#x8282;&#x70B9;&#x7684;&#x6700;&#x5927;&#x5C42;&#x6B21;&#x88AB;&#x79F0;&#x4E3A;&#x6DF1;&#x5EA6;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x8BE5;&#x6811;&#x7684;<span style=\"color: #ff0000;\">&#x6DF1;&#x5EA6;(depth)</span>&#x4E3A;4&#x3002;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4ECE;&#x8282;&#x70B9;3&#x5F00;&#x59CB;&#x5411;&#x4E0B;&#x770B;&#xFF0C;&#x800C;&#x5FFD;&#x7565;&#x5176;&#x5B83;&#x90E8;&#x5206;&#x3002;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x4EE5;&#x8282;&#x70B9;3&#x4E3A;&#x6839;&#x8282;&#x70B9;&#x7684;&#x6811;&#xFF1A;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://images.cnitblog.com/blog/413416/201303/16232143-93d719390c3e472c9768534d0a27e70f.png\" alt=\"\"></span></p>\r\n<p style=\"text-align: center;\"><span style=\"font-family: courier new,courier;\"><span style=\"color: #ff0000;\">&#x4E09;&#x89D2;&#x5F62;</span>&#x4EE3;&#x8868;&#x4E00;&#x68F5;&#x6811;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x518D;&#x8FDB;&#x4E00;&#x6B65;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x5B64;&#x7ACB;&#x7684;<span style=\"color: #ff0000;\">&#x4E00;&#x4E2A;&#x8282;&#x70B9;<span style=\"color: #000000;\">&#x4E5F;</span></span>&#x662F;&#x4E00;&#x68F5;&#x6811;&#x7684;&#x8BDD;&#xFF0C;&#x539F;&#x6765;&#x7684;&#x6811;&#x5C31;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4E3A;&#x6839;&#x8282;&#x70B9;&#x548C;<span style=\"color: #ff0000;\">&#x5B50;&#x6811;(subtree)</span>&#x7684;&#x5173;&#x7CFB;:</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://images.cnitblog.com/blog/413416/201303/16233042-9861fb0986b74612b35faa40d49804f3.png\" alt=\"\"></span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x4E0A;&#x8FF0;&#x89C2;&#x5BDF;&#x5B9E;&#x9645;&#x4E0A;&#x7ED9;&#x4E86;&#x6211;&#x4EEC;&#x4E00;&#x79CD;&#x4E25;&#x683C;&#x7684;&#x5B9A;&#x4E49;&#x6811;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">1. &#x6811;&#x662F;&#x5143;&#x7D20;&#x7684;&#x96C6;&#x5408;&#x3002;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">2. &#x8BE5;&#x96C6;&#x5408;&#x53EF;&#x4EE5;&#x4E3A;&#x7A7A;&#x3002;&#x8FD9;&#x65F6;&#x6811;&#x4E2D;&#x6CA1;&#x6709;&#x5143;&#x7D20;&#xFF0C;&#x6211;&#x4EEC;&#x79F0;&#x6811;&#x4E3A;<span style=\"color: #ff0000;\">&#x7A7A;&#x6811; (empty tree)</span>&#x3002;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">3. &#x5982;&#x679C;&#x8BE5;&#x96C6;&#x5408;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x96C6;&#x5408;&#x6709;&#x4E00;&#x4E2A;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x4EE5;&#x53CA;0&#x4E2A;&#x6216;&#x8005;&#x591A;&#x4E2A;&#x5B50;&#x6811;&#x3002;&#x6839;&#x8282;&#x70B9;&#x4E0E;&#x5B83;&#x7684;&#x5B50;&#x6811;&#x7684;&#x6839;&#x8282;&#x70B9;&#x7528;&#x4E00;&#x4E2A;<span style=\"color: #ff0000;\">&#x8FB9;(edge)</span>&#x76F8;&#x8FDE;&#x3002;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x4E0A;&#x9762;&#x7684;&#x7B2C;&#x4E09;&#x70B9;&#x662F;&#x4EE5;&#x9012;&#x5F52;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B9A;&#x4E49;&#x6811;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x5B9A;&#x4E49;&#x6811;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;&#x6811;&#x81EA;&#x8EAB;(&#x5B50;&#x6811;)&#x3002;&#x7531;&#x4E8E;&#x6811;&#x7684;&#x9012;&#x5F52;&#x7279;&#x5F81;&#xFF0C;&#x8BB8;&#x591A;&#x6811;&#x76F8;&#x5173;&#x7684;&#x64CD;&#x4F5C;&#x4E5F;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x4F7F;&#x7528;&#x9012;&#x5F52;&#x5B9E;&#x73B0;&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x5728;&#x540E;&#x9762;&#x770B;&#x5230;&#x3002;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">(&#x4E0A;&#x8FF0;&#x5B9A;&#x4E49;&#x6765;&#x81EA;&quot;Data Structures and Algorithm Analysis in C, by Mark Allen Weiss&quot;&#x3002; &#x6211;&#x89C9;&#x5F97;&#x6709;&#x4E00;&#x70B9;&#x4E0D;&#x592A;&#x4E25;&#x683C;&#x7684;&#x5730;&#x65B9;&#x3002;&#x5982;&#x679C;&#x8BF4;&#x7A7A;&#x6811;&#x5C5E;&#x4E8E;&#x6811;&#xFF0C;&#x7B2C;&#x4E09;&#x70B9;&#x5E94;&#x8BE5;&#x662F; &#x201C;...&#x4EE5;&#x53CA;0&#x4E2A;&#x548C;&#x591A;&#x4E2A;&#x975E;&#x7A7A;&#x5B50;&#x6811;...&#x201D; )</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<h3 style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x6811;&#x7684;&#x5B9E;&#x73B0;</span></h3>\r\n<p><span style=\"font-family: courier new,courier;\">&#x6811;&#x7684;&#x793A;&#x610F;&#x56FE;&#x5DF2;&#x7ECF;&#x7ED9;&#x51FA;&#x4E86;&#x6811;&#x7684;&#x4E00;&#x79CD;&#x5185;&#x5B58;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;: &#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x50A8;&#x5B58;&#x5143;&#x7D20;&#x548C;&#x591A;&#x4E2A;&#x6307;&#x5411;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x6307;&#x9488;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x5B50;&#x8282;&#x70B9;&#x6570;&#x76EE;&#x662F;&#x4E0D;&#x786E;&#x5B9A;&#x7684;&#x3002;&#x4E00;&#x4E2A;&#x7236;&#x8282;&#x70B9;&#x53EF;&#x80FD;&#x6709;&#x5927;&#x91CF;&#x7684;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x800C;&#x53E6;&#x4E00;&#x4E2A;&#x7236;&#x8282;&#x70B9;&#x53EF;&#x80FD;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x800C;&#x6811;&#x7684;&#x589E;&#x5220;&#x8282;&#x70B9;&#x64CD;&#x4F5C;&#x4F1A;&#x8BA9;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x6570;&#x76EE;&#x53D1;&#x751F;&#x8FDB;&#x4E00;&#x6B65;&#x7684;&#x53D8;&#x5316;&#x3002;&#x8FD9;&#x79CD;&#x4E0D;&#x786E;&#x5B9A;&#x6027;&#x5C31;&#x53EF;&#x80FD;&#x5E26;&#x6765;&#x5927;&#x91CF;&#x7684;&#x5185;&#x5B58;&#x76F8;&#x5173;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x4E14;&#x5BB9;&#x6613;&#x9020;&#x6210;&#x5185;&#x5B58;&#x7684;&#x6D6A;&#x8D39;&#x3002;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x4E00;&#x79CD;&#x7ECF;&#x5178;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x5982;&#x4E0B;:</span></p>\r\n<p><span style=\"font-family: courier new,courier;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://images.cnitblog.com/blog/413416/201303/16235249-529d7d9dafee4f7192e6c57094372004.png\" alt=\"\"></span></p>\r\n<p style=\"text-align: center;\"><span style=\"font-family: courier new,courier;\">&#x6811;&#x7684;&#x5185;&#x5B58;&#x5B9E;&#x73B0;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x62E5;&#x6709;&#x540C;&#x4E00;&#x7236;&#x8282;&#x70B9;&#x7684;&#x4E24;&#x4E2A;&#x8282;&#x70B9;&#x4E92;&#x4E3A;<span style=\"color: #ff0000;\">&#x5144;&#x5F1F;&#x8282;&#x70B9;(sibling)</span>&#x3002;&#x4E0A;&#x56FE;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x5305;&#x542B;&#x6709;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x6307;&#x5411;&#x7B2C;&#x4E00;&#x4E2A;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x5E76;&#x6709;&#x53E6;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x6307;&#x5411;&#x5B83;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x7EDF;&#x4E00;&#x7684;&#x3001;&#x786E;&#x5B9A;&#x7684;&#x7ED3;&#x6784;&#x6765;&#x8868;&#x793A;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x3002;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x8BA1;&#x7B97;&#x673A;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x662F;&#x6811;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x6BD4;&#x5982;<a title=\"&#x53D1;&#x5E03;&#x4E8E;2012-09-09 00:24\" href=\"http://www.cnblogs.com/vamei/archive/2012/09/09/2676792.html\">Linux&#x6587;&#x4EF6;&#x7BA1;&#x7406;&#x80CC;&#x666F;&#x77E5;&#x8BC6;</a>&#x4E2D;&#x6240;&#x4ECB;&#x7ECD;&#x7684;&#x3002;&#x5728;UNIX&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x6587;&#x4EF6;(&#x6587;&#x4EF6;&#x5939;&#x540C;&#x6837;&#x662F;&#x4E00;&#x79CD;&#x6587;&#x4EF6;)&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x662F;&#x4E00;&#x4E2A;&#x8282;&#x70B9;&#x3002;&#x975E;&#x6587;&#x4EF6;&#x5939;&#x7684;&#x6587;&#x4EF6;&#x88AB;&#x50A8;&#x5B58;&#x5728;&#x53F6;&#x8282;&#x70B9;&#x3002;&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x6709;&#x6307;&#x5411;&#x7236;&#x8282;&#x70B9;&#x548C;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x6307;&#x9488;(&#x5728;UNIX&#x4E2D;&#xFF0C;&#x6587;&#x4EF6;&#x5939;&#x8FD8;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x81EA;&#x8EAB;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x8FD9;&#x4E0E;&#x6211;&#x4EEC;&#x4E0A;&#x9762;&#x89C1;&#x5230;&#x7684;&#x6811;&#x6709;&#x6240;&#x533A;&#x522B;)&#x3002;&#x5728;git&#x4E2D;&#xFF0C;&#x4E5F;&#x6709;&#x7C7B;&#x4F3C;&#x7684;&#x6811;&#x72B6;&#x7ED3;&#x6784;&#xFF0C;&#x7528;&#x4EE5;&#x8868;&#x8FBE;&#x6574;&#x4E2A;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x7248;&#x672C;&#x53D8;&#x5316; (&#x53C2;&#x8003;<a class=\"titlelink\" href=\"http://www.cnblogs.com/vamei/archive/2013/02/21/2918069.html\">&#x7248;&#x672C;&#x7BA1;&#x7406;&#x4E09;&#x56FD;&#x5FD7;</a>)&#x3002;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://images.cnitblog.com/blog/413416/201303/16230341-b8873fc15d314641ae33399d473cf2d2.jpg\" alt=\"\" width=\"599\" height=\"446\"></span></p>\r\n<p style=\"text-align: center;\"><span style=\"font-family: courier new,courier;\">&#x6587;&#x4EF6;&#x6811;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<h3><span style=\"font-family: courier new,courier;\">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;C&#x5B9E;&#x73B0;</span></h3>\r\n<p><span style=\"font-family: courier new,courier;\"><span style=\"color: #ff0000;\">&#x4E8C;&#x53C9;&#x6811;(binary)</span>&#x662F;&#x4E00;&#x79CD;&#x7279;&#x6B8A;&#x7684;&#x6811;&#x3002;<span style=\"color: #ff0000;\">&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x6709;2&#x4E2A;&#x5B50;&#x8282;&#x70B9;</span>&#xFF1A;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://images.cnitblog.com/blog/413416/201303/17000135-75060e3ee81847c6892d2167710b4317.png\" alt=\"\"></span></p>\r\n<p style=\"text-align: center;\"><span style=\"font-family: courier new,courier;\">&#x4E8C;&#x53C9;&#x6811;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x7531;&#x4E8E;&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x5B50;&#x8282;&#x70B9;&#x6570;&#x76EE;&#x786E;&#x5B9A;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x91C7;&#x7528;&#x4E0A;&#x56FE;&#x65B9;&#x5F0F;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x5B9E;&#x73B0;&#x3002;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6709;&#x4E00;&#x4E2A;<span style=\"color: #ff0000;\">&#x5DE6;&#x5B50;&#x8282;&#x70B9;(left children)</span>&#x548C;<span style=\"color: #ff0000;\">&#x53F3;&#x5B50;&#x8282;&#x70B9;(right children)</span>&#x3002;&#x5DE6;&#x5B50;&#x8282;&#x70B9;&#x662F;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x53F3;&#x5B50;&#x8282;&#x70B9;&#x662F;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x6839;&#x8282;&#x70B9;&#x3002;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x5982;&#x679C;&#x6211;&#x4EEC;&#x7ED9;&#x4E8C;&#x53C9;&#x6811;&#x52A0;&#x4E00;&#x4E2A;&#x989D;&#x5916;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x79CD;&#x88AB;&#x79F0;&#x4F5C;<span style=\"color: #ff0000;\">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;(binary search tree)</span>&#x7684;&#x7279;&#x6B8A;&#x4E8C;&#x53C9;&#x6811;&#x3002;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x8981;&#x6C42;&#xFF1A;<span style=\"color: #ff0000;\">&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x90FD;&#x4E0D;&#x6BD4;&#x5B83;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x4EFB;&#x610F;&#x5143;&#x7D20;&#x5C0F;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x6BD4;&#x5B83;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x4EFB;&#x610F;&#x5143;&#x7D20;&#x5927;&#x3002;</span></span></p>\r\n<p><span style=\"font-family: courier new,courier;\">(&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x6811;&#x4E2D;<span style=\"color: #000000;\">&#x6CA1;&#x6709;&#x91CD;&#x590D;&#x7684;&#x5143;&#x7D20;</span>&#xFF0C;&#x90A3;&#x4E48;&#x4E0A;&#x8FF0;&#x8981;&#x6C42;&#x53EF;&#x4EE5;&#x5199;&#x6210;&#xFF1A;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x6BD4;&#x5B83;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x4EFB;&#x610F;&#x8282;&#x70B9;&#x5927;&#xFF0C;&#x800C;&#x4E14;&#x6BD4;&#x5B83;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x4EFB;&#x610F;&#x8282;&#x70B9;&#x5C0F;)</span></p>\r\n<p><span style=\"font-family: courier new,courier;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://images.cnitblog.com/blog/413416/201303/17001935-1b9faa8518a14f95b3bb9eb3083f683c.png\" alt=\"\"></span></p>\r\n<p style=\"text-align: center;\"><span style=\"font-family: courier new,courier;\">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x6CE8;&#x610F;&#x6811;&#x4E2D;&#x5143;&#x7D20;&#x7684;&#x5927;&#x5C0F;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x5B9E;&#x73B0;<span style=\"color: #ff0000;\">&#x641C;&#x7D22;</span>&#x7B97;&#x6CD5;&#x3002;&#x5728;&#x641C;&#x7D22;&#x5143;&#x7D20;x&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;x&#x548C;&#x6839;&#x8282;&#x70B9;&#x6BD4;&#x8F83;:</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">1. &#x5982;&#x679C;x&#x7B49;&#x4E8E;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x90A3;&#x4E48;&#x627E;&#x5230;x&#xFF0C;&#x505C;&#x6B62;&#x641C;&#x7D22; (&#x7EC8;&#x6B62;&#x6761;&#x4EF6;)</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">2. &#x5982;&#x679C;x&#x5C0F;&#x4E8E;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x90A3;&#x4E48;&#x641C;&#x7D22;&#x5DE6;&#x5B50;&#x6811;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">3. &#x5982;&#x679C;x&#x5927;&#x4E8E;&#x6839;&#x8282;&#x70B9;&#xFF0C;&#x90A3;&#x4E48;&#x641C;&#x7D22;&#x53F3;&#x5B50;&#x6811;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x6240;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x6B21;&#x6570;&#x6700;&#x591A;&#x4E0E;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x76F8;&#x7B49;&#x3002;n&#x4E2A;&#x8282;&#x70B9;&#x7684;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6DF1;&#x5EA6;&#x6700;&#x591A;&#x4E3A;n&#xFF0C;&#x6700;&#x5C11;&#x4E3A;log(n)&#x3002;</span></p>\r\n<p style=\"text-align: left;\"><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x4E0B;&#x9762;&#x662F;&#x7528;C&#x8BED;&#x8A00;&#x5B9E;&#x73B0;&#x7684;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#xFF0C;&#x5E76;&#x6709;<span style=\"color: #800000;\">&#x641C;&#x7D22;</span>&#xFF0C;<span style=\"color: #800000;\">&#x63D2;&#x5165;</span>&#xFF0C;<span style=\"color: #800000;\">&#x5220;&#x9664;</span>&#xFF0C;<span style=\"color: #800000;\">&#x5BFB;&#x627E;&#x6700;&#x5927;&#x6700;&#x5C0F;&#x8282;&#x70B9;</span>&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x4E2D;&#x5B58;&#x6709;&#x4E09;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x7236;&#x8282;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x5DE6;&#x5B50;&#x8282;&#x70B9;&#xFF0C;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x53F3;&#x5B50;&#x8282;&#x70B9;&#x3002;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">(&#x8FD9;&#x6837;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x3002;&#x8282;&#x70B9;&#x53EF;&#x4EE5;&#x53EA;&#x4FDD;&#x5B58;&#x6709;&#x6307;&#x5411;&#x5DE6;&#x53F3;&#x5B50;&#x8282;&#x70B9;&#x7684;&#x4E24;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x5E76;&#x5B9E;&#x73B0;&#x4E0A;&#x8FF0;&#x64CD;&#x4F5C;&#x3002;)</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\"><span style=\"color: #ff0000;\">&#x5220;&#x9664;&#x8282;&#x70B9;</span>&#x76F8;&#x5BF9;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x3002;&#x5220;&#x9664;&#x8282;&#x70B9;&#x540E;&#xFF0C;&#x6709;&#x65F6;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E00;&#x5B9A;&#x7684;&#x8C03;&#x6574;&#xFF0C;&#x4EE5;&#x6062;&#x590D;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x6027;&#x8D28;(<span style=\"color: #ff0000;\">&#x6BCF;&#x4E2A;&#x8282;&#x70B9;&#x90FD;&#x4E0D;&#x6BD4;&#x5B83;&#x5DE6;&#x5B50;&#x6811;&#x7684;&#x4EFB;&#x610F;&#x5143;&#x7D20;&#x5C0F;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x6BD4;&#x5B83;&#x7684;&#x53F3;&#x5B50;&#x6811;&#x7684;&#x4EFB;&#x610F;&#x5143;&#x7D20;&#x5927;</span>)&#x3002; </span></p>\r\n<ul>\r\n<li><span style=\"font-family: courier new,courier;\">&#x53F6;&#x8282;&#x70B9;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5220;&#x9664;&#x3002;</span></li>\r\n<li><span style=\"font-family: courier new,courier;\">&#x5220;&#x9664;<span style=\"color: #ff0000;\">&#x975E;&#x53F6;&#x8282;&#x70B9;</span>&#x65F6;&#xFF0C;&#x6BD4;&#x5982;&#x4E0B;&#x56FE;&#x4E2D;&#x7684;&#x8282;&#x70B9;8&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5220;&#x9664;&#x5DE6;&#x5B50;&#x6811;&#x4E2D;&#x6700;&#x5927;&#x7684;&#x5143;&#x7D20;(&#x6216;&#x8005;&#x53F3;&#x6811;&#x4E2D;&#x6700;&#x5927;&#x7684;&#x5143;&#x7D20;)&#xFF0C;&#x7528;&#x5220;&#x9664;&#x7684;&#x8282;&#x70B9;&#x6765;&#x8865;&#x5145;&#x5143;&#x7D20;8&#x4EA7;&#x751F;&#x7684;&#x7A7A;&#x7F3A;&#x3002;&#x4F46;&#x8BE5;&#x5143;&#x7D20;&#x53EF;&#x80FD;&#x4E5F;&#x4E0D;&#x662F;&#x53F6;&#x8282;&#x70B9;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x6240;&#x4EA7;&#x751F;&#x7684;&#x7A7A;&#x7F3A;&#x9700;&#x8981;&#x5176;&#x4ED6;&#x5143;&#x7D20;&#x8865;&#x5145;&#x2026;&#x2026; &#x76F4;&#x5230;&#x6700;&#x540E;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x53F6;&#x8282;&#x70B9;&#x3002;&#x4E0A;&#x8FF0;&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x9012;&#x5F52;&#x5B9E;&#x73B0;&#x3002;</span></li>\r\n</ul>\r\n<p><span style=\"font-family: courier new,courier;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"http://images.cnitblog.com/blog/413416/201303/17004331-c29bb56faa7f469fbdc52aade30beac8.png\" alt=\"\"></span></p>\r\n<p style=\"text-align: center;\"><span style=\"font-family: courier new,courier;\">&#x5220;&#x9664;&#x8282;&#x70B9;</span></p>\r\n<p style=\"text-align: center;\"><span style=\"font-family: courier new,courier;\"><img src=\"http://images.cnitblog.com/blog/413416/201303/17004501-b9e0747212684604afc4c5aebb109932.png\" alt=\"\"></span></p>\r\n<p style=\"text-align: center;\"><span style=\"font-family: courier new,courier;\">&#x5220;&#x9664;&#x8282;&#x70B9;&#x540E;&#x7684;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;</span></p>\r\n<p style=\"text-align: left;\">&#xA0;</p>\r\n<div class=\"cnblogs_code\">\r\n<pre><span style=\"font-family: courier new,courier;\"><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> By Vamei </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> binary search tree </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\n#include </span>&lt;stdio.h&gt;<span style=\"color: #000000;\">\r\n#include </span>&lt;stdlib.h&gt;<span style=\"color: #000000;\">\r\n\r\ntypedef </span><span style=\"color: #0000ff;\">struct</span> node *<span style=\"color: #000000;\">position;\r\ntypedef </span><span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> ElementTP;\r\n\r\n</span><span style=\"color: #0000ff;\">struct</span><span style=\"color: #000000;\"> node {\r\n    position parent;\r\n    ElementTP element;\r\n    position lchild;\r\n    position rchild;\r\n};\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> pointer =&gt; root node of the tree </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\ntypedef </span><span style=\"color: #0000ff;\">struct</span> node *<span style=\"color: #000000;\">TREE;\r\n\r\n</span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> print_sorted_tree(TREE);\r\nposition find_min(TREE);\r\nposition find_max(TREE);\r\nposition find_value(TREE, ElementTP);\r\nposition insert_value(TREE, ElementTP);\r\nElementTP delete_node(position);\r\n\r\n</span><span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> is_root(position);\r\n</span><span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> is_leaf(position);\r\n</span><span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ElementTP delete_leaf(position);\r\n</span><span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> insert_node_to_nonempty_tree(TREE, position);\r\n\r\n</span><span style=\"color: #0000ff;\">void</span> main(<span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\">) \r\n{\r\n    TREE tr;\r\n    position np;\r\n    ElementTP element;\r\n    tr </span>=<span style=\"color: #000000;\"> NULL;\r\n    tr </span>= insert_value(tr, <span style=\"color: #800080;\">18</span><span style=\"color: #000000;\">);\r\n    tr </span>= insert_value(tr, <span style=\"color: #800080;\">5</span><span style=\"color: #000000;\">);\r\n    tr </span>= insert_value(tr, <span style=\"color: #800080;\">2</span><span style=\"color: #000000;\">); \r\n    tr </span>= insert_value(tr, <span style=\"color: #800080;\">8</span><span style=\"color: #000000;\">);\r\n    tr </span>= insert_value(tr, <span style=\"color: #800080;\">81</span><span style=\"color: #000000;\">);\r\n    tr </span>= insert_value(tr, <span style=\"color: #800080;\">101</span><span style=\"color: #000000;\">);\r\n    printf(</span><span style=\"color: #800000;\">&quot;</span><span style=\"color: #800000;\">Original:\\n</span><span style=\"color: #800000;\">&quot;</span><span style=\"color: #000000;\">);\r\n    print_sorted_tree(tr);\r\n\r\n    np </span>= find_value(tr, <span style=\"color: #800080;\">8</span><span style=\"color: #000000;\">);\r\n    </span><span style=\"color: #0000ff;\">if</span>(np !=<span style=\"color: #000000;\"> NULL) {\r\n        delete_node(np);\r\n        printf(</span><span style=\"color: #800000;\">&quot;</span><span style=\"color: #800000;\">After deletion:\\n</span><span style=\"color: #800000;\">&quot;</span><span style=\"color: #000000;\">);\r\n        print_sorted_tree(tr);\r\n    }\r\n}\r\n\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> \r\n * print values of the tree in sorted order\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> print_sorted_tree(TREE tr)\r\n{\r\n    </span><span style=\"color: #0000ff;\">if</span> (tr == NULL) <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">;\r\n    print_sorted_tree(tr</span>-&gt;<span style=\"color: #000000;\">lchild);\r\n    printf(</span><span style=\"color: #800000;\">&quot;</span><span style=\"color: #800000;\">%d \\n</span><span style=\"color: #800000;\">&quot;</span>, tr-&gt;<span style=\"color: #000000;\">element);\r\n    print_sorted_tree(tr</span>-&gt;<span style=\"color: #000000;\">rchild);\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">\r\n * search for minimum value\r\n * traverse lchild\r\n </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\nposition find_min(TREE tr)\r\n{\r\n    position np;\r\n    np </span>=<span style=\"color: #000000;\"> tr;\r\n    </span><span style=\"color: #0000ff;\">if</span> (np == NULL) <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> NULL;\r\n    </span><span style=\"color: #0000ff;\">while</span>(np-&gt;lchild !=<span style=\"color: #000000;\"> NULL) {\r\n        np </span>= np-&gt;<span style=\"color: #000000;\">lchild;\r\n    }\r\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> np;\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">\r\n * search for maximum value\r\n * traverse rchild\r\n </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\nposition find_max(TREE tr)\r\n{\r\n    position np;\r\n    np </span>=<span style=\"color: #000000;\"> tr;\r\n    </span><span style=\"color: #0000ff;\">if</span> (np == NULL) <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> NULL;\r\n    </span><span style=\"color: #0000ff;\">while</span>(np-&gt;rchild !=<span style=\"color: #000000;\"> NULL) {\r\n        np </span>= np-&gt;<span style=\"color: #000000;\">rchild;\r\n    }\r\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> np;\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">\r\n * search for value\r\n *\r\n </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\nposition find_value(TREE tr, ElementTP value) \r\n{\r\n    </span><span style=\"color: #0000ff;\">if</span> (tr == NULL) <span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> NULL; \r\n\r\n    </span><span style=\"color: #0000ff;\">if</span> (tr-&gt;element ==<span style=\"color: #000000;\"> value) {\r\n        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> tr;\r\n    }\r\n    </span><span style=\"color: #0000ff;\">else</span> <span style=\"color: #0000ff;\">if</span> (value &lt; tr-&gt;<span style=\"color: #000000;\">element) {\r\n        </span><span style=\"color: #0000ff;\">return</span> find_value(tr-&gt;<span style=\"color: #000000;\">lchild, value);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {\r\n        </span><span style=\"color: #0000ff;\">return</span> find_value(tr-&gt;<span style=\"color: #000000;\">rchild, value);\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> \r\n * delete node np \r\n </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\nElementTP delete_node(position np) \r\n{\r\n    position replace;\r\n    ElementTP element;\r\n    </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (is_leaf(np)) {\r\n        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> delete_leaf(np);\r\n    }   \r\n    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {\r\n        </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> if a node is not a leaf, then we need to find a replacement </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\n        replace </span>= (np-&gt;lchild != NULL) ? find_max(np-&gt;lchild) : find_min(np-&gt;<span style=\"color: #000000;\">rchild);\r\n        element </span>= np-&gt;<span style=\"color: #000000;\">element;\r\n        np</span>-&gt;element =<span style=\"color: #000000;\"> delete_node(replace);\r\n        </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> element;\r\n    }\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> \r\n * insert a value into the tree\r\n * return root address of the tree\r\n </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\nposition insert_value(TREE tr, ElementTP value) {\r\n    position np;\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> prepare the node </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\n    np </span>= (position) malloc(<span style=\"color: #0000ff;\">sizeof</span>(<span style=\"color: #0000ff;\">struct</span><span style=\"color: #000000;\"> node));\r\n    np</span>-&gt;element =<span style=\"color: #000000;\"> value;\r\n    np</span>-&gt;parent  =<span style=\"color: #000000;\"> NULL;\r\n    np</span>-&gt;lchild  =<span style=\"color: #000000;\"> NULL;\r\n    np</span>-&gt;rchild  =<span style=\"color: #000000;\"> NULL;\r\n \r\n    </span><span style=\"color: #0000ff;\">if</span> (tr == NULL) tr =<span style=\"color: #000000;\"> np;\r\n    </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {\r\n        insert_node_to_nonempty_tree(tr, np);\r\n    }\r\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> tr;\r\n}\r\n\r\n\r\n</span><span style=\"color: #008000;\">//</span><span style=\"color: #008000;\">=============================================</span>\r\n\r\n<span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">\r\n * np is root?\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> is_root(position np)\r\n{\r\n    </span><span style=\"color: #0000ff;\">return</span> (np-&gt;parent ==<span style=\"color: #000000;\"> NULL);\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">\r\n * np is leaf?\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">int</span><span style=\"color: #000000;\"> is_leaf(position np)\r\n{\r\n    </span><span style=\"color: #0000ff;\">return</span> (np-&gt;lchild == NULL &amp;&amp; np-&gt;rchild ==<span style=\"color: #000000;\"> NULL);\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> \r\n * if an element is a leaf, \r\n * then it could be removed with no side effect.\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">static</span><span style=\"color: #000000;\"> ElementTP delete_leaf(position np)\r\n{\r\n    ElementTP element;\r\n    position parent;\r\n    element </span>= np-&gt;<span style=\"color: #000000;\">element;\r\n    parent  </span>= np-&gt;<span style=\"color: #000000;\">parent;\r\n    </span><span style=\"color: #0000ff;\">if</span>(!<span style=\"color: #000000;\">is_root(np)) {\r\n        </span><span style=\"color: #0000ff;\">if</span> (parent-&gt;lchild ==<span style=\"color: #000000;\"> np) {\r\n            parent</span>-&gt;lchild =<span style=\"color: #000000;\"> NULL;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {\r\n            parent</span>-&gt;rchild =<span style=\"color: #000000;\"> NULL;\r\n        }\r\n    }\r\n    free(np);\r\n    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> element;\r\n}\r\n\r\n</span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\">\r\n * insert a node to a non-empty tree\r\n * called by insert_value()\r\n </span><span style=\"color: #008000;\">*/</span>\r\n<span style=\"color: #0000ff;\">static</span> <span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\"> insert_node_to_nonempty_tree(TREE tr, position np)\r\n{\r\n    </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> insert the node </span><span style=\"color: #008000;\">*/</span>\r\n    <span style=\"color: #0000ff;\">if</span>(np-&gt;element &lt;= tr-&gt;<span style=\"color: #000000;\">element) {\r\n        </span><span style=\"color: #0000ff;\">if</span> (tr-&gt;lchild ==<span style=\"color: #000000;\"> NULL) {\r\n            </span><span style=\"color: #008000;\">/*</span><span style=\"color: #008000;\"> then tr-&gt;lchild is the proper place </span><span style=\"color: #008000;\">*/</span><span style=\"color: #000000;\">\r\n            tr</span>-&gt;lchild =<span style=\"color: #000000;\"> np;\r\n            np</span>-&gt;parent =<span style=\"color: #000000;\"> tr;\r\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {\r\n            insert_node_to_nonempty_tree(tr</span>-&gt;<span style=\"color: #000000;\">lchild, np);\r\n        }\r\n    }\r\n    </span><span style=\"color: #0000ff;\">else</span> <span style=\"color: #0000ff;\">if</span>(np-&gt;element &gt; tr-&gt;<span style=\"color: #000000;\">element) {\r\n        </span><span style=\"color: #0000ff;\">if</span> (tr-&gt;rchild ==<span style=\"color: #000000;\"> NULL) {\r\n            tr</span>-&gt;rchild =<span style=\"color: #000000;\"> np;\r\n            np</span>-&gt;parent =<span style=\"color: #000000;\"> tr;\r\n            </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\">;\r\n        }\r\n        </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {\r\n            insert_node_to_nonempty_tree(tr</span>-&gt;<span style=\"color: #000000;\">rchild, np);\r\n        }\r\n    }\r\n}</span></span></pre>\r\n</div>\r\n<p><span style=\"font-family: courier new,courier;\">&#xA0;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x8FD0;&#x884C;&#x7ED3;&#x679C;:</span></p>\r\n<p><span style=\"font-family: courier new,courier; color: #800000;\">Original:<br>2 <br>5 <br>8 <br>18 <br>81 <br>101 <br>After deletion:<br>2 <br>5 <br>18 <br>81 <br>101</span></p>\r\n<p>&#xA0;</p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x4E0A;&#x8FF0;&#x5B9E;&#x73B0;&#x4E2D;&#x7684;&#x5220;&#x9664;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x3002;&#x6709;&#x4E00;&#x79CD;&#x7B80;&#x5355;&#x7684;&#x66FF;&#x4EE3;&#x64CD;&#x4F5C;&#xFF0C;&#x79F0;&#x4E3A;<span style=\"color: #ff0000;\">&#x61D2;&#x60F0;&#x5220;&#x9664;(lazy deletion)</span>&#x3002;&#x5728;&#x61D2;&#x60F0;&#x5220;&#x9664;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x771F;&#x6B63;&#x4ECE;&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x4E2D;&#x5220;&#x9664;&#x8BE5;&#x8282;&#x70B9;&#xFF0C;&#x800C;&#x662F;&#x5C06;&#x8BE5;&#x8282;&#x70B9;<span style=\"color: #ff0000;\">&#x6807;&#x8BB0;</span>&#x4E3A;&#x201C;&#x5DF2;&#x5220;&#x9664;&#x201D;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x7528;&#x627E;&#x5230;&#x5143;&#x7D20;&#x5E76;&#x6807;&#x8BB0;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x5220;&#x9664;&#x5143;&#x7D20;&#x4E86;&#x3002;&#x5982;&#x679C;&#x6709;&#x76F8;&#x540C;&#x7684;&#x5143;&#x7D20;&#x91CD;&#x65B0;&#x63D2;&#x5165;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x8BE5;&#x8282;&#x70B9;&#x627E;&#x5230;&#xFF0C;&#x5E76;&#x53D6;&#x6D88;&#x5220;&#x9664;&#x6807;&#x8BB0;&#x3002;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x61D2;&#x60F0;&#x5220;&#x9664;&#x7684;&#x5B9E;&#x73B0;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x4E00;&#x4E0B;&#x3002;&#x6811;&#x6240;&#x5360;&#x636E;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x4E0D;&#x4F1A;&#x56E0;&#x4E3A;&#x5220;&#x9664;&#x8282;&#x70B9;&#x800C;&#x51CF;&#x5C0F;&#x3002;&#x61D2;&#x60F0;&#x8282;&#x70B9;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x7528;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x6362;&#x53D6;&#x64CD;&#x4F5C;&#x7684;&#x7B80;&#x4FBF;&#x6027;&#x3002;</span></p>\r\n<p>&#xA0;</p>\r\n<h3><span style=\"font-family: courier new,courier;\">&#x603B;&#x7ED3;</span></h3>\r\n<p><span style=\"font-family: courier new,courier;\">&#x6811;, &#x4E8C;&#x53C9;&#x6811;, &#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;</span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x4E8C;&#x53C9;&#x641C;&#x7D22;&#x6811;&#x7684;&#x5220;&#x9664;<br></span></p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x61D2;&#x60F0;&#x5220;&#x9664;</span></p>\r\n<p>&#xA0;</p>\r\n<p><span style=\"font-family: courier new,courier;\">&#x6B22;&#x8FCE;&#x7EE7;&#x7EED;&#x9605;&#x8BFB;<a href=\"http://www.cnblogs.com/vamei/archive/2013/03/22/2974052.html\">&#x201C;&#x7EB8;&#x4E0A;&#x8C08;&#x5175;: &#x7B97;&#x6CD5;&#x4E0E;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x201D;</a>&#x7CFB;&#x5217;&#x3002;</span></p>\r\n<p>&#xA0;</p>"}